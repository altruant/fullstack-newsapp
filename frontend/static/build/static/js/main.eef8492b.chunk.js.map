{"version":3,"sources":["assets/e2020.png","assets/entertainment.png","assets/arrow-down.svg","components/ArticleDetail.js","components/TopNews.js","components/ArticleTitle.js","components/LastWeek.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ArticleDetail","props","state","isHover","icon","this","article","categories","e2020","entertainment","className","src","image_url","style","maxWidth","alt","title","arrowDown","created","modified","body","React","Component","TopNews","articles","filter","isTopNews","map","id","key","ArticleTitle","LastWeek","display","App","fetch","then","response","json","data","setState","catch","error","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.eef8492b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/e2020.f28a10b9.png\";","module.exports = __webpack_public_path__ + \"static/media/entertainment.ffc48706.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.7fd3e2de.svg\";","import React from 'react';\nimport e2020 from '../assets/e2020.png'\nimport entertainment from '../assets/entertainment.png'\nimport arrowDown from '../assets/arrow-down.svg'\n\n\n\nclass ArticleDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHover: false,\n    }\n  }\n\n  render() {\n    let icon = ''\n    switch (this.props.article.categories) {\n      case 'Election 2020':\n        icon = e2020;\n        break;\n      case 'Entertainment':\n        icon = entertainment\n        break;\n      default:\n        icon = ''\n    }\n    return(\n      <div className=\"article-detail\">\n        <div className=\"article-header\">\n          <div className='article-header-top'>\n            <img className='detail-img' src={this.props.article.image_url} style={{maxWidth: '100%'}} alt=\"#\"/>\n            <h3>{this.props.article.title}</h3>\n          </div>\n          <div className=\"article-header-bottom\">\n            <div className=\"icon-categories\">\n              <img src={icon} alt=\"#\" className=\"icon\"/>\n              <h3>{this.props.article.categories}</h3>\n            </div>\n            <div className=\"arrow\">\n              <img src={arrowDown} alt='#' className='arrow-down'/>\n            </div>\n          </div>\n\n        </div>\n        <div className='article-body'>\n          <span>Posted on {this.props.article.created}</span>\n          <span>Modified at {this.props.article.modified}</span>\n          <p>{this.props.article.body}</p>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ArticleDetail\n","import React from 'react'\nimport ArticleDetail from './ArticleDetail.js'\n\nclass TopNews extends React.Component {\n  render() {\n    return(\n      this.props.articles.filter(article => article.isTopNews === true).map((article, id) => (\n        <div key={id}>\n          <ArticleDetail article={article}/>\n        </div>\n      ))\n    )\n  }\n}\n\n\nexport default TopNews\n","import React from 'react'\n\n\nclass ArticleTitle extends React.Component {\n  render() {\n    return (\n      <div className=\"article-title\">\n        <h3>{this.props.article.title}</h3>\n      </div>\n    )\n  }\n}\n\nexport default ArticleTitle\n","import React from 'react'\nimport ArticleTitle from './ArticleTitle.js'\nimport ArticleDetail from './ArticleDetail.js'\n\nclass LastWeek extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      display: '',\n    }\n  }\n  render() {\n    return (\n      this.props.articles.filter(article => article.isTopNews === false).map((article, id) => (\n        <div key={id} className='container'>\n          <ArticleTitle article={article}/>\n          <div className='custom-modal'>\n            <ArticleDetail display={this.state.display} article={article}/>\n          </div>\n        </div>\n      ))\n    )\n  }\n}\n\nexport default LastWeek\n","import React from 'react';\n// import NavHeader from './components/NavHeader.js';\nimport TopNews from './components/TopNews.js'\nimport LastWeek from './components/LastWeek.js'\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      articles: [],\n      \n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/')\n      .then(response => response.json())\n      .then(data => this.setState({ articles: data }))\n      .catch(error => console.log('Error', error))\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <h2>Top Articles</h2>\n            <TopNews articles={this.state.articles}/>\n          </div>\n          <div className=\"col-6\">\n            <h2>Posted This Week</h2>\n            <LastWeek articles={this.state.articles} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}