{"version":3,"sources":["assets/e2020.png","assets/world.png","assets/entertainment.png","assets/us-news.png","assets/arrow-down.svg","components/BaseView/Navbar.js","components/BaseView/ArticleDetail.js","components/BaseView/TopNews.js","components/BaseView/LastWeek.js","components/BaseView/index.js","components/Forms/ArticleForm.js","components/Forms/LoginForm.js","components/Forms/RegisterForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Fragment","className","onClick","this","props","articleFilter","data-filter","href","React","Component","ArticleDetail","state","isHover","icon","article","categories","e2020","entertainment","us_news","world","src","image_url","style","maxWidth","alt","title","arrowDown","created","modified","body","TopNews","articles","filter","cat","isTopNews","map","id","key","LastWeek","Base","ArticleForm","handleInput","bind","handleSubmit","event","setState","target","name","value","preventDefault","fetch","method","headers","Cookies","get","JSON","stringify","response","json","data","set","loginOutButton","localStorage","getItem","logOut","onSubmit","htmlFor","type","onChange","placeholder","cols","rows","stage","LoginForm","username","password","e","setItem","password1","RegisterForm","email","password2","console","log","App","isLoggedIn","isChanging","dataset","remove","removeItem","then","catch","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.63388e96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/e2020.f28a10b9.png\";","module.exports = __webpack_public_path__ + \"static/media/world.ffe74156.png\";","module.exports = __webpack_public_path__ + \"static/media/entertainment.ffc48706.png\";","module.exports = __webpack_public_path__ + \"static/media/us-news.aba47d6e.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.7fd3e2de.svg\";","import React from 'react'\n\n\n\nclass Navbar extends React.Component{\n    render() {\n        return (\n          <React.Fragment>\n            <div className='navbar'>\n              <button onClick={this.props.articleFilter} data-filter='all' className='home'>Home</button>\n              <button onClick={this.props.articleFilter} data-filter='Election 2020' className='election'>Election 2020</button>\n              <button onClick={this.props.articleFilter} data-filter='US News' className='US'>US News</button>\n              <button onClick={this.props.articleFilter} data-filter='World News' className='World'>World News</button>\n              <button onClick={this.props.articleFilter} data-filter='Entertainment' className='Entertainment'>Entertainment</button>\n              <div className=\"auth-links\">\n                <a href=\"#\">Login</a>\n                <span>&#124;</span>\n                <a href=\"#\">Register</a>\n              </div>\n            </div>\n\n          </React.Fragment>\n        );\n    }\n}\n\nexport default Navbar\n","import React from 'react';\nimport e2020 from '../../assets/e2020.png'\nimport world from '../../assets/world.png'\nimport entertainment from '../../assets/entertainment.png'\nimport us_news from '../../assets/us-news.png'\nimport arrowDown from '../../assets/arrow-down.svg'\n\n\n\nclass ArticleDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHover: false,\n    }\n  }\n\n  render() {\n    let icon = ''\n    switch (this.props.article.categories) {\n      case 'Election 2020':\n        icon = e2020;\n        break;\n      case 'Entertainment':\n        icon = entertainment\n        break;\n      case 'US News':\n        icon = us_news;\n        break;\n      case 'World News':\n        icon = world;\n        break;\n      default:\n        icon = ''\n    }\n    return(\n      <div className=\"article-detail\">\n        <div className=\"article-header\">\n          <div className='article-header-top'>\n            <img className='detail-img' src={this.props.article.image_url} style={{maxWidth: '100%'}} alt=\"#\"/>\n            <h3>{this.props.article.title}</h3>\n          </div>\n          <div className=\"article-header-bottom\">\n            <div className=\"icon-categories\">\n              <img src={icon} alt=\"#\" className=\"icon\"/>\n              <h3>{this.props.article.categories}</h3>\n            </div>\n            <div className=\"arrow\">\n              <img src={arrowDown} alt='#' className='arrow-down'/>\n            </div>\n          </div>\n\n        </div>\n        <div className='article-body'>\n          <span>Posted on {this.props.article.created}</span>\n          <span>Modified at {this.props.article.modified}</span>\n          <p>{this.props.article.body}</p>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ArticleDetail\n","import React from 'react'\nimport ArticleDetail from './ArticleDetail.js'\n\nclass TopNews extends React.Component {\n  render() {\n    return (\n        this.props.articles.filter(article => this.props.cat ? article.categories === this.props.cat : article)\n          .filter(article => article.isTopNews === true)\n          .map((article, id) => (\n            <div className='top-news' key={id}>\n              <ArticleDetail article={article}/>\n            </div>\n      ))\n    )\n  }\n}\n\n\nexport default TopNews\n","import React from 'react'\nimport ArticleDetail from './ArticleDetail.js'\n\nclass LastWeek extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n        this.props.articles.filter(article => this.props.cat ? article.categories === this.props.cat : article)\n          .filter(article => article.isTopNews === false)\n          .map((article, id) => (\n            <div className='not-top-news' key={id}>\n              <ArticleDetail article={article}/>\n            </div>\n      ))\n    )\n  }\n}\n\nexport default LastWeek\n","import React from 'react'\nimport Navbar from './Navbar.js'\nimport TopNews from './TopNews.js'\nimport LastWeek from './LastWeek.js'\n\nclass Base extends React.Component {\n  render() {\n    return(\n      <React.Fragment>\n        <Navbar articleFilter={this.props.articleFilter}/>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <h2 className='top'>Top Articles</h2>\n            <TopNews cat={this.props.cat} articles={this.props.articles}/>\n          </div>\n          <div className=\"col-6\">\n            <h2 className='this-week'>Posted This Week</h2>\n            <LastWeek cat={this.props.cat} articles={this.props.articles} />\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Base\n","import React from 'react'\nimport Cookies from 'js-cookie'\n\nclass ArticleForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state= {\n      'title': '',\n      'body': '',\n      'image_url': '',\n      'categories': '',\n      'stage': '',\n    }\n\n    this.handleInput=this.handleInput.bind(this)\n    this.handleSubmit=this.handleSubmit.bind(this)\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const response = await fetch('/api/v1/', {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state)\n    });\n\n    const data = await response.json()\n    Cookies.set('Authorization', `Token ${data.key}`)\n  }\n  render() {\n    let loginOutButton\n    if(localStorage.getItem('login')) {\n      loginOutButton = <button onClick={this.props.logOut}>Logout</button>\n    } else {\n      loginOutButton = <button>Login</button>\n    }\n    return(\n      <React.Fragment>\n        <div className=\"navbar\">\n          <div className=\"auth-links\">\n            {loginOutButton}\n          </div>\n        </div>\n        <div className=\"header\">\n          <h2>Post Article</h2>\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-group'>\n            <label htmlFor=\"title\">Title</label>\n            <input className='form-control' type=\"text\" name='title' value={this.state.title} onChange={this.handleInput} placeholder='Title'/>\n          </div>\n          <div className='form-group'>\n            <label htmlFor=\"body\">Body</label>\n            <textarea className='form-control' name=\"body\" cols=\"30\" rows=\"15\" value={this.state.body} onChange={this.handleInput}></textarea>\n          </div>\n          <div className='form-group'>\n          <label htmlFor=\"url\">Image URL</label>\n            <input className='form-control' type='url' name='image_url' value={this.state.image_url} onChange={this.handleInput} placeholder='https://example.com'/>\n          </div>\n          <div className=\"dropdowns form-group\">\n            <div className='category'>\n              <label htmlFor=\"categories\">Article Category</label>\n                <select className='form-control' name=\"categories\" value={this.state.categories} onChange={this.handleInput}>\n                  <option value=\"\">Select a Category</option>\n                  <option value=\"Election 2020\">Election 2020</option>\n                  <option value=\"US News\">US News</option>\n                  <option value=\"World News\">World News</option>\n                  <option value=\"Entertainment\">Entertainment</option>\n                </select>\n            </div>\n            <div className='stage'>\n              <label htmlFor=\"stage\">Publishing Stage</label>\n                <select className='form-control' name=\"stage\" value={this.state.stage} onChange={this.handleInput}>\n                  <option value=\"\">Select a Stage</option>\n                  <option value=\"Draft\">Draft</option>\n                  <option value=\"Submitted\">Submitted</option>\n                </select>\n            </div>\n          </div>\n        </form>\n        <div className=\"submit-button\">\n        <button className='btn btn-primary' type='submit'>Submit</button>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ArticleForm\n","import React from 'react';\nimport Cookies from 'js-cookie';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state={\n      username: '',\n      password: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const response = await fetch('/api/v1/rest-auth/login/', {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state)\n    });\n\n    const data = await response.json();\n    Cookies.set('Authorization', `Token ${data.key}`)\n    localStorage.setItem('login', data.key)\n\n  }\n  render() {\n    return (\n        <form onSubmit={this.handleSubmit}>\n          <h2>Login</h2>\n          <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleInput} placeholder=\"Username\"/>\n          <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" value={this.state.password1} onChange={this.handleInput} placeholder=\"Password\"/>\n          <button type='submit'>Login</button>\n        </form>\n    )\n  }\n}\n\nexport default LoginForm\n","import React from 'react';\nimport Cookies from 'js-cookie';\n\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state={\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const response = await fetch('/api/v1/rest-auth/registration/', {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state)\n    });\n\n    const data = await response.json();\n    console.log(data)\n    Cookies.set('Authorization', `Token ${data.key}`)\n\n  }\n  render() {\n    return (\n        <form onSubmit={this.handleSubmit}>\n          <h2>Register</h2>\n          <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleInput} placeholder=\"Username\"/>\n          <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput} placeholder=\"Email\"/>\n          <label htmlFor=\"password1\">Password</label>\n            <input type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput} placeholder=\"Password\"/>\n          <label htmlFor=\"password2\">Confirm Password</label>\n            <input type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleInput} placeholder=\"\"/>\n          <button type='submit'>Register</button>\n        </form>\n    )\n  }\n}\n\nexport default RegisterForm\n","import React from 'react';\nimport Base from './components/BaseView/index.js'\nimport ArticleForm from './components/Forms/ArticleForm.js';\nimport LoginForm from './components/Forms/LoginForm.js'\nimport RegisterForm from './components/Forms/RegisterForm.js'\nimport './App.css';\nimport Cookies from 'js-cookie'\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      articles: [],\n      cat: null,\n      isLoggedIn: false,\n      isChanging: false,\n    }\n    this.articleFilter = this.articleFilter.bind(this)\n    this.logOut = this.logOut.bind(this)\n  }\n\n  articleFilter(e) {\n    // console.log(e.target.dataset.filter)\n    if(e.target.dataset.filter === 'all'){\n      this.setState( {cat: null})\n    } else {\n      this.setState( {cat: e.target.dataset.filter} )\n    }\n  }\n\n  async logOut() {\n    const response = await fetch('/api/v1/rest-auth/logout/', {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state)\n    });\n\n    const data = await response.json();\n    Cookies.remove('Authorization')\n    localStorage.removeItem('login')\n    this.setState({isLoggedIn: false})\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/')\n      .then(response => response.json())\n      .then(data => this.setState({ articles: data }))\n      .catch(error => console.log('Error', error))\n    if(localStorage.getItem('login')) {\n      this.setState( {isLoggedIn: true} )\n    }\n  }\n  render() {\n      if(localStorage.getItem('login')) {\n        return(\n          <React.Fragment>\n            <ArticleForm logOut={this.logOut}/>\n          </React.Fragment>)\n      } else  {\n        return(\n          <React.Fragment>\n            <Base articles={this.state.articles} cat={this.state.cat} articleFilter={this.articleFilter}/>\n            <LoginForm />\n            <RegisterForm />\n          </React.Fragment>)\n      }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}